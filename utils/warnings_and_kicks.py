import uuid
from datetime import datetime, timedelta

from aiogram import Bot
from pytz import timezone
from yookassa import Payment

from config.cfg import Config
from db.database import Database
from keyboards.subscribe import create_kb_to_payment
from utils.payments import create_subscription_params


async def send_warnings_and_kicks(bot: Bot, db: Database, cfg: Config) -> None:
    users = await db.get_all_users()

    for user in users:
        if (user.is_subscriber) and (datetime.now(tz=timezone("Europe/Moscow")) > user.subscription_end):
            # TODO –∫–∏–∫ –∏–∑ —á–∞—Ç–æ–≤ –∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –º–µ–Ω—Ç–æ—Ä–æ–≤
            await db.user_update(
                user_id=user.tg_id,
                subscription_start=None,
                subscription_end=None,
                is_subscribed_to_payments=None,
                payment_method_id=None,
            )
            try:
                idempotence_key = str(uuid.uuid4())
                payment = Payment.create(
                    create_subscription_params(
                        price=cfg.subscription_price, return_url=cfg.bot_link, user_id=user.tg_id
                    ),
                    idempotency_key=idempotence_key,
                )
                await bot.send_message(
                    chat_id=user.tg_id,
                    text="‚ò†Ô∏è –¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. –ù–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –æ—Ñ–æ—Ä–º–∏—Ç—å –µ—ë —Å–Ω–æ–≤–∞ üåà",
                    reply_markup=create_kb_to_payment(url=payment.confirmation.confirmation_url, payment_id=payment.id),
                )
            except:
                # TODO –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É
                pass
        elif (
            (user.is_subscriber)
            and (user.send_warning is None)
            and ((datetime.now(tz=timezone("Europe/Moscow")) + timedelta(days=1)) > user.subscription_end)
        ):
            try:
                idempotence_key = str(uuid.uuid4())
                payment = Payment.create(
                    create_subscription_params(
                        price=cfg.subscription_price, return_url=cfg.bot_link, user_id=user.tg_id
                    ),
                    idempotency_key=idempotence_key,
                )
                await bot.send_message(
                    chat_id=user.tg_id,
                    text="üò∞ –ó–∞–≤—Ç—Ä–∞ —Å—Ä–æ–∫ —Ç–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç. –ß–µ—Ä–µ–∑ *24 —á–∞—Å–∞* —Ç—ã –ø–æ—Ç–µ—Ä—è–µ—à—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–µ—Ä–≤–∏—Å–∞–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ Unicode.",
                    reply_markup=create_kb_to_payment(url=payment.confirmation.confirmation_url, payment_id=payment.id),
                )
                await db.user_update(user_id=user.tg_id, send_warning=True)
            except:
                # TODO –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É
                pass
