from datetime import datetime, timedelta

from aiogram import Bot

from db.database import Database
from keyboards.general import subscribe_and_return_to_menu


async def send_warnings_and_kicks(bot: Bot, db: Database) -> None:
    users = await db.get_all_users()

    for user in users:
        if (user.subscription_db_name is not None) and (datetime.now() > user.subscription_end):
            # TODO –∫–∏–∫ –∏–∑ —á–∞—Ç–æ–≤ –∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –º–µ–Ω—Ç–æ—Ä–æ–≤
            await db.user_update(
                user_id=user.tg_id,
                subscription_db_name=None,
                subscription_start=None,
                subscription_end=None,
                is_subscribed_to_payments=None,
                payment_method_id=None
            )
            try:
                await bot.send_message(
                    chat_id=user.tg_id,
                    text="‚ò†Ô∏è –¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. –ù–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –æ—Ñ–æ—Ä–º–∏—Ç—å –µ—ë —Å–Ω–æ–≤–∞ üåà",
                    reply_markup=subscribe_and_return_to_menu
                )
            except:
                # TODO –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É
                pass
        elif (user.subscription_db_name is not None) and (user.send_warning is None) and ((datetime.now() + timedelta(days=1) > user.subscription_end)):
            try:
                await bot.send_message(
                    chat_id=user.tg_id,
                    text="üò∞ –ó–∞–≤—Ç—Ä–∞ —Å—Ä–æ–∫ —Ç–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç. –ß–µ—Ä–µ–∑ *24 —á–∞—Å–∞* —Ç—ã –ø–æ—Ç–µ—Ä—è–µ—à—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–µ—Ä–≤–∏—Å–∞–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ Unicode.",
                    reply_markup=subscribe_and_return_to_menu
                )
                await db.user_update(user_id=user.tg_id, send_warning=True)
            except:
                # TODO –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É
                pass
